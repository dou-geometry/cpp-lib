

# This file was *autogenerated* from the file /tmp/tmp.gRCUjzcau7.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_4p2 = RealNumber('4.2'); _sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_4 = Integer(4); _sage_const_0p12 = RealNumber('0.12'); _sage_const_300 = Integer(300)#!/usr/bin/env sage
import sys
from sage.all import *
def parseFrame():
    cc=_sage_const_0 
    inFrame=False
    pts=[]
    vct=vector((_sage_const_0 ,_sage_const_0 ))
    for ln in sys.stdin:
        ln=ln.rstrip()
        if(ln=="============"):
            if(inFrame):
                inFrame=False
            else:
                inFrame=True
                cc=_sage_const_0 
        else:
            if(cc==_sage_const_0 ):
                vct=vector(sage_eval(ln))
                if(vct[_sage_const_0 ]>_sage_const_4p2 ): break
                pts.append(vct)
            cc+=_sage_const_1 
    return pts
def main():
    pts=parseFrame()
    a=(pts[_sage_const_1 ][_sage_const_1 ]-pts[_sage_const_0 ][_sage_const_1 ])/(pts[_sage_const_1 ][_sage_const_0 ]-pts[_sage_const_0 ][_sage_const_0 ])
    b=pts[_sage_const_1 ][_sage_const_1 ]-a*pts[_sage_const_1 ][_sage_const_0 ]
    c=(pts[-_sage_const_1 ][_sage_const_1 ]-pts[-_sage_const_2 ][_sage_const_1 ])/(pts[-_sage_const_1 ][_sage_const_0 ]-pts[-_sage_const_2 ][_sage_const_0 ])
    d=pts[-_sage_const_2 ][_sage_const_1 ]-c*pts[-_sage_const_2 ][_sage_const_0 ]
    Gph=line(pts, color="purple")+plot(a*x+b, (x,-_sage_const_4 ,_sage_const_0p12 ), color="red")+plot(c*x+d, (x, -_sage_const_0p12 , _sage_const_4 ), color="blue")
    Gph.save(filename=sys.argv[_sage_const_1 ], xmin=-_sage_const_4 , xmax=_sage_const_4 , ymin=-_sage_const_4 , ymax=_sage_const_4 , aspect_ratio=_sage_const_1 , dpi=_sage_const_300 )
main()

